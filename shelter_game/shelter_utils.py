import random
import string

import shelter_game.characteristics as characteristics
import shelter_game.shelters as shelters

from shelter_game.shelter import *


def _get_random_bio_characteristics() -> str:
    age = random.randint(18, 80)
    gender = random.choice(["–º—É–∂—á–∏–Ω–∞", "–∂–µ–Ω—â–∏–Ω–∞"])
    orientation = random.choice(["–≥–µ—Ç–µ—Ä–æ", "–≥–æ–º–æ", "–±–∏", "asexual"])

    if gender == "–º—É–∂—á–∏–Ω–∞":
        return f"–º—É–∂—á–∏–Ω–∞ {age} –ª–µ—Ç, {orientation}"
    if gender == "–∂–µ–Ω—â–∏–Ω–∞":
        ret_str = f"–∂–µ–Ω—â–∏–Ω–∞ {age} –ª–µ—Ç, {orientation}"
        if random.randint(0,100) >= 50:
            ret_str += " –±–µ—Ä–µ–º–µ–Ω–Ω–∞—è"
        return ret_str 
    else:
        return str(ret_str)
    

def get_random_card(card_numder: int, user_id: int)-> Card:
     return Card(
        user_id=user_id,
        number=card_numder,
        profession=[random.choice(characteristics.professions), False],
        bio_characteristics= [_get_random_bio_characteristics(), False],
        health=[random.choice(characteristics.health), False],
        hobby=[random.choice(characteristics.hobbies), False],
        phobia=[random.choice(characteristics.phobias), False],
        character=[random.choice(characteristics.character), False],
        additional_information=[random.choice(characteristics.additional_information), False],
        knowledge=[random.choice(characteristics.knowledge), False],
        baggage=[random.choice(characteristics.baggages), False],
        action_card=["—á—Ç–æ—Ç–æ", False],
        condition_card=["—á—Ç–æ—Ç–æ", False]
    )


def _get_random_shelter() -> Shelter:  
    shelter_name = random.choice(list(shelters.shelters_dict.keys()))
    shelter_discription = shelters.shelters_dict[shelter_name]
    rooms = random.choice(shelters.rooms_list)
    number_of_items = random.randint(1,4)
    items = [random.choice(shelters.items) for _ in range(number_of_items)]
    size = f"{random.randint(100,550)} m¬≤"
    time = f"{random.randint(1,5)} –ª–µ—Ç"

    return Shelter(name=shelter_name, description=shelter_discription, rooms=rooms, loot=items, size=size, time=time)


def _get_random_catastrophe() -> Catastrophe:
    catastrophe_name = random.choice(list(shelters.catastrophes.keys()))

    return Catastrophe(name=catastrophe_name, description=shelters.catastrophes[catastrophe_name])


def get_random_game(name: str) -> Game:

    catastrophe = _get_random_catastrophe()
    
    shelter = _get_random_shelter()

    return Game(name=name, catastrophe=catastrophe, shelter=shelter)


def show_characteristic(characteristic: list) -> str:
    if characteristic[1] == True:
        return characteristic[0]
    else:
        return "######"
    
def show_my_characteristic(characteristic: list) -> str:
    if characteristic[1] == True:
        return f"{characteristic[0]}üü¢"
    else:
        return f"{characteristic[0]}üî¥"

def print_card(card: Card)-> str:

    characteristics_list = [characteric[0] for characteric in card.get_all_characteristics().values() if characteric[1] == True ]

    text = f"""
    **–ö–∞—Ä—Ç–æ—á–∫–∞ –∏–≥—Ä–æ–∫–∞ –Ω–æ–º–µ—Ä:**{card.number}
    
    **–ë–∏–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏:** {show_characteristic(card.characteristics["biological_characteristics"])}
    **–ü—Ä–æ—Ñ–µ—Å—Å–∏—è:** {show_characteristic(card.characteristics["profession"])}
    **–ó–¥–æ—Ä–æ–≤—å–µ:** {show_characteristic(card.characteristics["health"])}
    **–•–æ–±–±–∏:** {show_characteristic(card.characteristics["hobby"])}
    **–§–æ–±–∏—è:** {show_characteristic(card.characteristics["phobia"])}
    **–•–∞—Ä–∞–∫—Ç–µ—Ä:** {show_characteristic(card.characteristics["character"])}
    **–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:** {show_characteristic(card.characteristics["additional_information"])}
    **–ó–Ω–∞–Ω–∏—è:** {show_characteristic(card.characteristics["knowledge"])}
    **–ë–∞–≥–∞–∂:** {show_characteristic(card.characteristics["baggage"])}
    **–î–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç—å:** {show_characteristic(card.characteristics["action_card"])}
    **–°–æ—Å—Ç–æ—è–Ω–∏–µ:** {show_characteristic(card.characteristics["condition_card"])}
    """
    return text 

def print_my_card(card: Card) -> str:

    text = f"""
    **–ö–∞—Ä—Ç–æ—á–∫–∞ –∏–≥—Ä–æ–∫–∞ –Ω–æ–º–µ—Ä:**{card.number}

    **–ë–∏–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏:** {show_my_characteristic(card.characteristics["biological_characteristics"])}
    **–ü—Ä–æ—Ñ–µ—Å—Å–∏—è:** {show_my_characteristic(card.characteristics["profession"])}
    **–ó–¥–æ—Ä–æ–≤—å–µ:** {show_my_characteristic(card.characteristics["health"])}
    **–•–æ–±–±–∏:** {show_my_characteristic(card.characteristics["hobby"])}
    **–§–æ–±–∏—è:** {show_my_characteristic(card.characteristics["phobia"])}
    **–•–∞—Ä–∞–∫—Ç–µ—Ä:** {show_my_characteristic(card.characteristics["character"])}
    **–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:** {show_my_characteristic(card.characteristics["additional_information"])}
    **–ó–Ω–∞–Ω–∏—è:** {show_my_characteristic(card.characteristics["knowledge"])}
    **–ë–∞–≥–∞–∂:** {show_my_characteristic(card.characteristics["baggage"])}
    **–î–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç—å:** {show_my_characteristic(card.characteristics["action_card"])}
    **–°–æ—Å—Ç–æ—è–Ω–∏–µ:** {show_my_characteristic(card.characteristics["condition_card"])}
    """

    return text
        