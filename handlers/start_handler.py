from aiogram import Router, F
from aiogram.filters.command import Command, CommandStart
from aiogram.types import Message
from aiogram.fsm.context import FSMContext

from game_states import Game

from shelter_game.shelter_utils import get_random_game

from keyboards import builders as b
from keyboards import reply as r

all_games = {}

router = Router()

START_TEXT = """
–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è –∏–≥—Ä—ã –≤ –Ω–∞—Å—Ç–æ–ª—å–Ω—É—é –∏–≥—Ä—É "–ë—É–Ω–∫–µ—Ä". 
–î–ª—è –Ω–∞—á–∞–ª–∞ –Ω—É–∂–Ω–æ —Å–æ–∑–¥–∞—Ç—å –∏–≥—Ä—É, –∏—Å–ø–æ–ª—å–∑—É—è –∫–Ω–æ–ø–∫—É üéÆ–Ω–∞—á–∞—Ç—å –∏–≥—Ä—É
–ï—Å–ª–∏ –Ω—É–∂–Ω–∞ –ø–æ–º–æ—â—å, –∏—Å–ø–æ–ª—å–∑—É–π –∫–æ–º–∞–Ω–¥—É:
/help.

"–ë—É–Ω–∫–µ—Ä" ‚Äì –¥–∏—Å–∫—É—Å—Å–∏–æ–Ω–Ω–∞—è –∏–≥—Ä–∞ –æ –≤—ã–∂–∏–≤–∞–Ω–∏–∏ –ø–æ—Å–ª–µ –∞–ø–æ–∫–∞–ª–∏–ø—Å–∏—Å–∞. –ù–∞ –ó–µ–º–ª–µ –≥—Ä—è–¥—ë—Ç –≥–ª–æ–±–∞–ª—å–Ω–∞—è –∫–∞—Ç–∞—Å—Ç—Ä–æ—Ñ–∞.
–ù–∞–º –ø–æ–≤–µ–∑–ª–æ, –≤—ã –æ–∫–∞–∑–∞–ª–∏—Å—å –ø–µ—Ä–µ–¥ –≤—Ö–æ–¥–æ–º –≤ —Å–ø–∞—Å–∞—Ç–µ–ª—å–Ω—ã–π –±—É–Ω–∫–µ—Ä, –≤ –∫–æ—Ç–æ—Ä–æ–º –º–æ–∂–Ω–æ –ø–µ—Ä–µ–∂–∏—Ç—å —Å–∞–º—ã–π –æ–ø–∞—Å–Ω—ã–π –ø–µ—Ä–∏–æ–¥.
–ù–æ –ø–æ–ø–∞—Å—Ç—å –≤ –±—É–Ω–∫–µ—Ä —Å–º–æ–≥—É—Ç –Ω–µ –≤—Å–µ ‚Äì –∞ –ª–∏—à—å –ø–æ–ª–æ–≤–∏–Ω–∞ –∏–∑ –≤–∞—Å! –ó–∞ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ä–∞—É–Ω–¥–æ–≤ –∏–≥—Ä–æ–∫–∏ —Ä–µ—à–∞—é—Ç, –∫–æ–≥–æ –ù–ï –±–µ—Ä—É—Ç –≤ –±—É–Ω–∫–µ—Ä.
–ü–æ–ø–∞–≤—à–∏–µ –≤ –±—É–Ω–∫–µ—Ä ‚Äì –≤—ã–∂–∏–≤—É—Ç, —á—Ç–æ–±—ã –∑–∞—Ç–µ–º –≤–æ–∑—Ä–æ–¥–∏—Ç—å —Ü–∏–≤–∏–ª–∏–∑–∞—Ü–∏—é.
–ò–≥—Ä–æ–∫–∏ –ø–æ–ª—É—á–∞—é—Ç –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–ª—É—á–∞–π–Ω—ã—Ö –∫–∞—Ä—Ç —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫: –ø–æ–ª –∏ –≤–æ–∑—Ä–∞—Å—Ç, –ø—Ä–æ—Ñ–µ—Å—Å–∏—è, –∑–¥–æ—Ä–æ–≤—å–µ, —Ö–æ–±–±–∏ –∏ –¥—Ä.
–ü–æ—Å—Ç–µ–ø–µ–Ω–Ω–æ –≤—ã —Ä–∞—Å–∫—Ä—ã–≤–∞–µ—Ç–µ —Å–≤–æ–∏ –∫–∞—Ä—Ç—ã, –∑–Ω–∞–∫–æ–º–∏—Ç–µ—Å—å –¥—Ä—É–≥ —Å –¥—Ä—É–≥–æ–º –∏ –ø—Ä–∏–Ω–∏–º–∞–µ—Ç–µ —Ä–µ—à–µ–Ω–∏—è, –∫—Ç–æ –∏ –Ω–∞—Å–∫–æ–ª—å–∫–æ –±—É–¥–µ—Ç –ø–æ–ª–µ–∑–µ–Ω –¥–ª—è –≤—ã–∂–∏–≤–∞–Ω–∏—è –∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –∂–∏–∑–Ω–∏ –ø–æ—Å–ª–µ –≤—ã—Ö–æ–¥–∞ –∏–∑ –±—É–Ω–∫–µ—Ä–∞. 
"""


@router.message(CommandStart())
async def cmd_start(message: Message):
    await message.answer(START_TEXT, reply_markup=r.main_kb)


@router.message(Command("help"))
async def cmd_help(message: Message):
    await message.answer(f"Hello, {message.from_user.full_name}!")


@router.message(Command("id"))
async def cmd_id(message: Message):
    await message.answer(f"id: {message.from_user.id}")


@router.message(F.text == "üÜïÔ∏è–Ω–∞—á–∞—Ç—å –Ω–æ–≤—É—é –∏–≥—Ä—É")
async def start_game(message: Message, state: FSMContext):
    await state.set_state(Game.game_configuration)
    await message.answer(f"–Ω–∞–ø–∏—à–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∏–≥—Ä—ã")


@router.message(Game.game_configuration)
async def game_configuration(message: Message, state: FSMContext):
    global all_games

    if not message.text in all_games.keys():
        all_games[message.text] = get_random_game(name = message.text, number_of_cards = 5)
    else:
        await message.answer(f"–∏–≥—Ä–∞ —Å —Ç–∞–∫–∏–º –Ω–∞–∑–≤–∞–Ω–∏–µ–º —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")

    await state.update_data(game = all_games[message.text])
        
    await state.set_state(Game.game)
    await message.answer("–≤—ã –º–æ–∂–µ—Ç–µ –Ω–∞—á–∞—Ç—å –∏–≥—Ä—É", reply_markup=b.get_standart_kb("üöÄ—Å—Ç–∞—Ä—Ç"))

@router.message(F.text == "üéÆ–ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—Å—è –∫ –∏–≥—Ä–µ")
async def join_game(message: Message, state: FSMContext):
    await message.answer(f"–Ω–∞–ø–∏—à–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∏–≥—Ä—ã")
    await state.set_state(Game.join_game)

@router.message(Game.join_game)
async def joining_to_game(message: Message, state: FSMContext):
    global all_games
    if message.text in all_games.keys():
        await state.update_data(game = all_games[message.text])
        await state.set_state(Game.game)
        await message.answer("–≤—ã –º–æ–∂–µ—Ç–µ –Ω–∞—á–∞—Ç—å –∏–≥—Ä—É", reply_markup=b.get_standart_kb("üöÄ—Å—Ç–∞—Ä—Ç"))
    else:
        await message.answer(f"–∏–≥—Ä—ã —Å —Ç–∞–∫–∏–º –Ω–∞–∑–≤–∞–Ω–∏–µ–º –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
