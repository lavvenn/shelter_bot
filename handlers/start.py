from aiogram import Router, F, Bot
from aiogram.filters.command import Command, CommandStart
from aiogram.types import Message, CallbackQuery
from aiogram.fsm.context import FSMContext

from game_states import Game

from shelter_game.shelter_utils import get_random_game, get_random_card

from keyboards import builders as b
from keyboards import reply as r
from keyboards import inline as i

all_games = {}

waiting_rooms = {}

router = Router()

START_TEXT = """
–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è –∏–≥—Ä—ã –≤ –Ω–∞—Å—Ç–æ–ª—å–Ω—É—é –∏–≥—Ä—É "–ë—É–Ω–∫–µ—Ä". 
–î–ª—è –Ω–∞—á–∞–ª–∞ –Ω—É–∂–Ω–æ —Å–æ–∑–¥–∞—Ç—å –∏–≥—Ä—É, –∏—Å–ø–æ–ª—å–∑—É—è –∫–Ω–æ–ø–∫—É üéÆ–Ω–∞—á–∞—Ç—å –∏–≥—Ä—É
–ï—Å–ª–∏ –Ω—É–∂–Ω–∞ –ø–æ–º–æ—â—å, –∏—Å–ø–æ–ª—å–∑—É–π –∫–æ–º–∞–Ω–¥—É:
/help.

"–ë—É–Ω–∫–µ—Ä" ‚Äì –¥–∏—Å–∫—É—Å—Å–∏–æ–Ω–Ω–∞—è –∏–≥—Ä–∞ –æ –≤—ã–∂–∏–≤–∞–Ω–∏–∏ –ø–æ—Å–ª–µ –∞–ø–æ–∫–∞–ª–∏–ø—Å–∏—Å–∞. –ù–∞ –ó–µ–º–ª–µ –≥—Ä—è–¥—ë—Ç –≥–ª–æ–±–∞–ª—å–Ω–∞—è –∫–∞—Ç–∞—Å—Ç—Ä–æ—Ñ–∞.
–ù–∞–º –ø–æ–≤–µ–∑–ª–æ, –≤—ã –æ–∫–∞–∑–∞–ª–∏—Å—å –ø–µ—Ä–µ–¥ –≤—Ö–æ–¥–æ–º –≤ —Å–ø–∞—Å–∞—Ç–µ–ª—å–Ω—ã–π –±—É–Ω–∫–µ—Ä, –≤ –∫–æ—Ç–æ—Ä–æ–º –º–æ–∂–Ω–æ –ø–µ—Ä–µ–∂–∏—Ç—å —Å–∞–º—ã–π –æ–ø–∞—Å–Ω—ã–π –ø–µ—Ä–∏–æ–¥.
–ù–æ –ø–æ–ø–∞—Å—Ç—å –≤ –±—É–Ω–∫–µ—Ä —Å–º–æ–≥—É—Ç –Ω–µ –≤—Å–µ ‚Äì –∞ –ª–∏—à—å –ø–æ–ª–æ–≤–∏–Ω–∞ –∏–∑ –≤–∞—Å! –ó–∞ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ä–∞—É–Ω–¥–æ–≤ –∏–≥—Ä–æ–∫–∏ —Ä–µ—à–∞—é—Ç, –∫–æ–≥–æ –ù–ï –±–µ—Ä—É—Ç –≤ –±—É–Ω–∫–µ—Ä.
–ü–æ–ø–∞–≤—à–∏–µ –≤ –±—É–Ω–∫–µ—Ä ‚Äì –≤—ã–∂–∏–≤—É—Ç, —á—Ç–æ–±—ã –∑–∞—Ç–µ–º –≤–æ–∑—Ä–æ–¥–∏—Ç—å —Ü–∏–≤–∏–ª–∏–∑–∞—Ü–∏—é.
–ò–≥—Ä–æ–∫–∏ –ø–æ–ª—É—á–∞—é—Ç –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–ª—É—á–∞–π–Ω—ã—Ö –∫–∞—Ä—Ç —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫: –ø–æ–ª –∏ –≤–æ–∑—Ä–∞—Å—Ç, –ø—Ä–æ—Ñ–µ—Å—Å–∏—è, –∑–¥–æ—Ä–æ–≤—å–µ, —Ö–æ–±–±–∏ –∏ –¥—Ä.
–ü–æ—Å—Ç–µ–ø–µ–Ω–Ω–æ –≤—ã —Ä–∞—Å–∫—Ä—ã–≤–∞–µ—Ç–µ —Å–≤–æ–∏ –∫–∞—Ä—Ç—ã, –∑–Ω–∞–∫–æ–º–∏—Ç–µ—Å—å –¥—Ä—É–≥ —Å –¥—Ä—É–≥–æ–º –∏ –ø—Ä–∏–Ω–∏–º–∞–µ—Ç–µ —Ä–µ—à–µ–Ω–∏—è, –∫—Ç–æ –∏ –Ω–∞—Å–∫–æ–ª—å–∫–æ –±—É–¥–µ—Ç –ø–æ–ª–µ–∑–µ–Ω –¥–ª—è –≤—ã–∂–∏–≤–∞–Ω–∏—è –∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –∂–∏–∑–Ω–∏ –ø–æ—Å–ª–µ –≤—ã—Ö–æ–¥–∞ –∏–∑ –±—É–Ω–∫–µ—Ä–∞. 
"""


# <--main commands-->
@router.message(CommandStart())
async def cmd_start(message: Message):
    await message.answer(START_TEXT, reply_markup=r.main_kb)


@router.message(Command("help"))
async def cmd_help(message: Message):
    await message.answer(f"Hello, {message.from_user.full_name}!")


@router.message(Command("id"))
async def cmd_id(message: Message):
    await message.answer(f"id: {message.from_user.id}")


# <--start_game handlers-->
@router.message(F.text == "üÜïÔ∏è–Ω–∞—á–∞—Ç—å –Ω–æ–≤—É—é –∏–≥—Ä—É")
async def start_game(message: Message, state: FSMContext):
    await state.set_state(Game.configuration)
    await message.answer(f"–Ω–∞–ø–∏—à–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∏–≥—Ä—ã")


@router.message(Game.configuration)
async def game_configuration(message: Message, state: FSMContext, bot: Bot):
    global all_games, waiting_rooms

    if not message.text in all_games.keys():
        all_games[message.text] = get_random_game(name=message.text)
        all_games[message.text].add_card(get_random_card(0, message.from_user.id))

        await state.update_data(game_name=message.text)

        await state.set_state(Game.waiting)
        await message.answer(
            "–æ–∂–∏–¥–∞–π—Ç–µ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è –∫ –∏–≥—Ä–µ –¥—Ä—É–≥–∏—Ö –∏–≥—Ä–æ–∫–æ–≤\n –µ—Å–ª–∏ –Ω–∞–±—Ä–∞–ª–æ—Å—å –Ω–µ–æ–±—Ö–æ–¥–∏–º–∏–º–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–≥—Ä–æ–∫–æ–≤ –º–æ–∂–∏—Ç–µ –Ω–∞–∂–∞—Ç—å üöÄ—Å—Ç–∞—Ä—Ç",
            reply_markup=b.get_standart_kb("üöÄ—Å—Ç–∞—Ä—Ç"),
        )
        msg = await message.answer(
            f"–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –≤ –∏–≥—Ä–µ\n1-@{message.from_user.username}"
        )
        waiting_rooms[message.text] = {message.from_user.id: msg.message_id}

        print(waiting_rooms)

    else:
        await message.answer(f"–∏–≥—Ä–∞ —Å —Ç–∞–∫–∏–º –Ω–∞–∑–≤–∞–Ω–∏–µ–º —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")


@router.message(F.text == "üéÆ–ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—Å—è –∫ –∏–≥—Ä–µ")
async def join_game(message: Message, state: FSMContext):
    await message.answer(f"–Ω–∞–ø–∏—à–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∏–≥—Ä—ã")
    await state.set_state(Game.join)


@router.message(Game.join)
async def joining_to_game(message: Message, state: FSMContext, bot: Bot):
    global all_games, waiting_rooms
    if message.text in all_games.keys():
        game = all_games[message.text]

        if not game.started:
            game.add_card(
                get_random_card(len(game.get_users_id()), message.from_user.id)
            )

            await state.update_data(game_name=message.text)
            await state.set_state(Game.waiting)
            await message.answer(
                "–≤—ã –æ–∂–∏–¥–∞–µ—Ç–µ –∏–≥—Ä–æ–∫–æ–≤ –≤ –∏–≥—Ä–µ –∏–≥—Ä–∞ –Ω–∞—á–Ω—ë—Ç—Å—è –∫–æ–≥–¥–∞ –µ—ë —Å–æ–∑–¥–∞—Ç–µ–ª—å –µ—ë  –Ω–∞—á–Ω—ë—Ç",
                reply_markup=r.rm_kb,
            )

            print(game.get_users_id())

            all_users_member_data = [
                await bot.get_chat_member(user_id=user_id, chat_id=user_id)
                for user_id in game.get_users_id()
            ]
            all_users_names = [
                member_data.user.username for member_data in all_users_member_data
            ]
            users = [
                f"{i+1}-@{all_users_names[i]}\n" for i in range(len(all_users_names))
            ]

            await message.answer("–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –≤ –∏–≥—Ä–µ\n" + "".join(users))

            for chat_id, message_id in waiting_rooms[message.text].items():
                print(f"{chat_id}  " * 10)
                await bot.edit_message_text(
                    chat_id=chat_id,
                    message_id=message_id,
                    text=f"–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –≤ –∏–≥—Ä–µ\n" + "".join(users),
                )
            waiting_rooms[message.text][message.from_user.id] = message.message_id

        else:
            if message.from_user.id in game.get_users_id():
                await state.update_data(game_name=message.text)
                await state.set_state(Game.waiting)
                await message.answer(
                    f"–≤—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –∏–≥—Ä—É", reply_markup=b.get_standart_kb("üèÅ—Å—Ç–∞—Ä—Ç")
                )

            else:
                await message.answer(
                    f"–∏–≥—Ä–∞ —É–∂–µ –Ω–∞—á–∞–ª–∞—Å—å, –≤—ã –Ω–µ –º–æ–∂–∏—Ç–µ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ –Ω–µ–∏ÃÜ"
                )
    else:
        await message.answer(f"–∏–≥—Ä—ã —Å —Ç–∞–∫–∏–º –Ω–∞–∑–≤–∞–Ω–∏–µ–º –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")


# <--waiting handlers-->


@router.callback_query(Game.waiting, F.data == "update_users_list")
async def update_users_list(query: CallbackQuery, state: FSMContext, bot: Bot):
    global all_games

    data = await state.get_data()
    game = all_games[data["game_name"]]
    all_users_member_data = [
        await bot.get_chat_member(user_id=user_id, chat_id=user_id)
        for user_id in game.get_users_id()
    ]
    all_users_names = [
        member_data.user.username for member_data in all_users_member_data
    ]
    users = [f"{i+1}-@{all_users_names[i]}\n" for i in range(len(all_users_names))]

    try:
        await query.message.edit_text(
            "–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –≤ –∏–≥—Ä–µ\n" + "".join(users),
            reply_markup=i.update_users_list_kb,
        )
        await query.answer()
    except:
        await query.answer()


# TODO: #32940378
# <--exception handlers--> –Ω–µ —Ä–∞–±–æ—Ç–∞—é—Ç —Ç.–∫ –≤ aiogram 3 —Ö–µ–Ω–¥–ª–µ—Ä—ã –±–µ–∑ —Å–æ—Å–æ—Ç–æ—è–Ω–∏—è —Å—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç –Ω–∞ –∫–∞–∂–¥–æ–º —Å–æ—Å—Ç–æ—è–Ω–∏–∏

# @router.message()
# async def mseesage_exception(message: Message):
#     await message.answer(f"–∏–∑–≤–∏–Ω–∏—Ç–µ —è –Ω–µ –º–æ–≥—É –ø–æ–Ω—è—Ç—å –≤–∞—à –∑–∞–ø—Ä–æ—Å –¥–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞–∂–º–∏—Ç–µ /start")

# @router.callback_query()
# async def callback_exception(query: CallbackQuery):
#     await query.message.answer(f"–∏–∑–≤–∏–Ω–∏—Ç–µ —è –Ω–µ –º–æ–≥—É –ø–æ–Ω—è—Ç—å –≤–∞—à –∑–∞–ø—Ä–æ—Å –¥–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞–∂–º–∏—Ç–µ /start")
#     await query.answer("–Ω–∞–∂–º–∏—Ç–µ /start")
