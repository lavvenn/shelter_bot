from aiogram import Router, F, Bot
from aiogram.fsm.context import FSMContext
from aiogram.types import Message

from game_states import Game

from shelter_game.shelter_utils import get_random_game, get_random_card

from config import GAME_RULES

from keyboards import builders as b
from keyboards import reply as r
from keyboards import inline as i

from handlers.start import all_games, waiting_rooms


router = Router()

# <--start_game handlers-->
@router.message(F.text == "üÜïÔ∏è–Ω–∞—á–∞—Ç—å –Ω–æ–≤—É—é –∏–≥—Ä—É")
async def start_game(message: Message, state: FSMContext):
    await state.set_state(Game.configuration)
    await message.answer(f"–Ω–∞–ø–∏—à–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∏–≥—Ä—ã")


@router.message(Game.configuration, F.text == "üìõ–æ—Ç–º–µ–Ω–∞")
async def cancel_game(message: Message, state: FSMContext):
    await state.clear()
    await message.answer(f"–∏–≥—Ä–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞", reply_markup=r.main_kb)


@router.message(Game.configuration)
async def game_configuration(message: Message, state: FSMContext, bot: Bot):
    global all_games, waiting_rooms

    if not message.text in all_games.keys():
        all_games[message.text] = get_random_game(name=message.text)
        all_games[message.text].add_card(get_random_card(0, message.from_user.id, message.from_user.full_name))

        await state.update_data(game_name=message.text)

        await state.set_state(Game.waiting)
        await message.answer(
            "–æ–∂–∏–¥–∞–π—Ç–µ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è –∫ –∏–≥—Ä–µ –¥—Ä—É–≥–∏—Ö –∏–≥—Ä–æ–∫–æ–≤\n –µ—Å–ª–∏ –Ω–∞–±—Ä–∞–ª–æ—Å—å –Ω–µ–æ–±—Ö–æ–¥–∏–º–∏–º–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–≥—Ä–æ–∫–æ–≤ –º–æ–∂–µ—Ç–µ –Ω–∞–∂–∞—Ç—å üöÄ—Å—Ç–∞—Ä—Ç",
            reply_markup=i.start_game_kb,
        )
        msg = await message.answer(
            f"–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –≤ –∏–≥—Ä–µ\n1-@{message.from_user.username}"
        )
        waiting_rooms[message.text] = {message.from_user.id: msg.message_id}


    else:
        await message.answer("–∏–≥—Ä–∞ —Å —Ç–∞–∫–∏–º –Ω–∞–∑–≤–∞–Ω–∏–µ–º —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –Ω–∞–ø–∏—à–∏—Ç–µ –¥—Ä—É–≥–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∏–≥—Ä—ã –∏–ª–∏ –æ—Ç–º–µ–Ω–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ",
                              reply_markup=b.get_standart_kb("üìõ–æ—Ç–º–µ–Ω–∞"))